@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Options
@using web.Constants
@using web.Models
@namespace web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IOptions<PusherPlaygroundConfig> _options;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <script src="_content/MatBlazor/dist/matBlazor.js"></script>
    <link href="_content/MatBlazor/dist/matBlazor.css" rel="stylesheet" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="web.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />

<script src="https://js.pusher.com/7.0/pusher.min.js"></script>
  <script>

    // Enable pusher logging - don't include this in production
    Pusher.logToConsole = true;


    function generateUserName(){
        var a = ["Small", "Blue", "Ugly", "Green", "Grey", "Pink"];
        var b = ["Bear", "Dog", "Banana", "Cat", "Horse", "Turtle"];

        var rA = Math.floor(Math.random()*a.length);
        var rB = Math.floor(Math.random()*b.length);
        var name = a[rA] + b[rB];

        return name;
    }

    const userName = generateUserName();

    var pusher = new Pusher('@_options.Value.Key', {
      cluster: '@_options.Value.Cluster',
      authEndpoint: `/api/pusher/auth/${userName}`
    });

    pusher.connection.bind('connected', function() {
        const channel = pusher.subscribe('@MessagingConstants.PRIVATE_CHANNEL');
        channel.bind('@MessagingConstants.EVENT', function(data) {
            console.log('message', data);
            logEvent(data.Text, data.Date);
        });

        const presenceChannel = pusher.subscribe('@MessagingConstants.PRESENCE_CHANNEL');
        channel.bind('pusher:subscription_succeeded', function (d){
            console.log('presence connected', d);
            logEvent('Connect to Presence Channel', presenceChannel.members.count);
        });
    });

    function logEvent(primary, secondary){
        const events = document.getElementById('messageEvents');

        if (!events)
        {
            return;
        }

       const message = `<li class=" mdc-list-item mdc-ripple-upgraded">
                             <span class=" mdc-list-item__text" style="">
                                 <span class=" mdc-list-item__primary-text" style="">${primary}</span>
                                 <span class=" mdc-list-item__secondary-text" style="">${secondary}</span>
                             </span>
                         </li>
                         <br>
                         <li role="separator" class=" mdc-list-divider" style=""></li>`;
        events.insertAdjacentHTML('beforeend', message);
    }
  </script>
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
</body>
</html>